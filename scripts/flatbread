#!/usr/bin/env python
from pita.model import get_chrom_models
from pita.log import AnnotationLog
from pita.util import to_genomic_orf, longest_orf
import os
import sys
import logging
import yaml
import argparse
import pysam
import subprocess
import pp
from tempfile import NamedTemporaryFile
import multiprocessing as mp
from functools import partial
import signal

p = argparse.ArgumentParser()
p.add_argument("-c",
               dest= "configfile",
               help="Input configuration file"
              )
p.add_argument("-b",
               dest= "bedfile",
               help="BED file with regions",
              )
p.add_argument("-o",
               dest= "output",
               help="Output name"
              )

args = p.parse_args()
configfile = args.configfile
bedfile = args.bedfile
outname = args.output

# Parse YAML config file
f = open(configfile, "r")
config = yaml.load(f)

# Data directory
base = "."
if config.has_key("data_path"):
    base = config["data_path"]

print config["annotation"]
